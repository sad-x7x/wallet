"use strict";(self.webpackChunkmytonwallet=self.webpackChunkmytonwallet||[]).push([[642],{17642:(e,t,i)=>{i.r(t),i.d(t,{BleConnector:()=>J});var n=i(12757),r=i(54011),c=i(31481),o=i(71108),a=i(17276),s=i(15123),d=i(24450),u=i(13983),h=i(13648),l=i(72985),w=i(44240),v=i(9162),f=i(72316),p=i(37968),g=i(62467),m=i(13288),y=i(59099),T=i(66847),b=i(69850),C=i(81160),D=i(65277),x=i(8767),E=i(1005),I=i(93776),k=i(48287).Buffer;const S=e=>e&&e.message&&(e.message.includes("was disconnected")||e.message.includes("not found"))?new d.DisconnectedDevice:e,F=e=>{throw null!=e?e:new Error};var P=i(48287).Buffer;function M(e,t,i){return(t=function(e){var t=function(e){if("object"!=typeof e||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var i=t.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}const U="ble-verbose",O={pairingThreshold:1e3,delayAfterFirstPairing:4e3},L={},A={},B={requestMTU:156,connectionPriority:1},N=(e,t)=>{const i=A[e];i&&i.disconnectTimeout&&((0,h.trace)({type:U,message:"Clearing queued disconnect",context:t}),clearTimeout(i.disconnectTimeout))};let R,$;class j extends u.Ay{static listen(e){let t=!1;return new h.LocalTracer(U).trace("Listening for devices ..."),n.Fk.getConnectedDevices((0,o.gq)()).then((async i=>{if(!t){for(const t of i)e.next({type:"add",device:t});await n.Fk.stopLEScan(),n.Fk.requestLEScan({services:(0,o.gq)()},(i=>{t||e.next({type:"add",device:i.device})}))}})),{unsubscribe:async()=>{t=!0,await n.Fk.stopLEScan()}}}static async open(e,t,i){let{rxjsScheduler:n}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return q(e,!0,t,i,{rxjsScheduler:n})}constructor(e,t,i,c,o){var u;let{context:h,rxjsScheduler:f}=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};super({context:h,logType:U}),u=this,M(this,"device",void 0),M(this,"deviceModel",void 0),M(this,"disconnectTimeout",null),M(this,"id",void 0),M(this,"isConnected",!0),M(this,"mtuSize",20),M(this,"notifyObservable",void 0),M(this,"notYetDisconnected",!0),M(this,"writableWithResponseCharacteristic",void 0),M(this,"writableWithoutResponseCharacteristic",void 0),M(this,"rxjsScheduler",void 0),M(this,"currentTransactionIds",void 0),M(this,"onDisconnect",void 0),M(this,"disconnectCallback",void 0),M(this,"exchange",(function(e){let{abortTimeoutMs:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};u.exchangeBusyPromise&&j.disconnectDevice(u.id,u.onDisconnect);const i=u.tracer.withUpdatedContext({function:"exchange"});return i.trace("Exchanging APDU ...",{abortTimeoutMs:t}),i.withType("apdu").trace(`=> ${e.toString("hex")}`),u.exchangeAtomicImpl((()=>(0,l._)((0,w.h)(u.notifyObservable.pipe((e=>(0,a.m)(e,{context:i.getContext()}))),(0,s.sendAPDU)(u.write,e,u.mtuSize,{context:i.getContext()})).pipe(t?(0,v.w)(t,u.rxjsScheduler):(0,y.M)(),(0,y.M)((e=>{i.withType("apdu").trace(`<= ${e.toString("hex")}`)})),(0,T.W)((async e=>{if(e instanceof v.M)throw i.trace("Aborting due to timeout and trying to cancel all communication write of the current exchange",{abortTimeoutMs:t,transactionIds:u.currentTransactionIds}),await u.cancelPendingOperations(),new d.TransportExchangeTimeoutError("Exchange aborted due to timeout");i.withType("ble-error").trace("Error while exchanging APDU",{error:e}),u.notYetDisconnected&&await j.disconnectDevice(u.id,u.onDisconnect);const n=S(e);throw i.trace("Error while exchanging APDU, mapped and throws following error",{mappedError:n}),n})),(0,b.j)((()=>{i.trace("Clearing current transaction ids",{currentTransactionIds:u.currentTransactionIds}),u.clearCurrentTransactionIds()}))))))})),M(this,"write",(async e=>{const t=(0,r.A)();this.currentTransactionIds.push(t);const i=this.tracer.withUpdatedContext({transactionId:t});i.trace("Writing to device",{willMessageBeAcked:!this.writableWithoutResponseCharacteristic});try{const t=new Uint8Array(e),r=new DataView(t.buffer,t.byteOffset,t.byteLength);await n.Fk.write(this.device.deviceId,R,this.writableWithResponseCharacteristic.uuid,r),i.withType("ble-frame").trace(`=> ${e.toString("hex")}`)}catch(e){throw i.trace("Error while writing APDU",{error:e}),new d.DisconnectedDeviceDuringOperation(e instanceof Error?e.message:`${e}`)}})),this.id=e.deviceId,this.device=e,this.writableWithResponseCharacteristic=t,this.writableWithoutResponseCharacteristic=i,this.notifyObservable=c,this.deviceModel=o,this.rxjsScheduler=f,this.currentTransactionIds=[],N(this.id),this.tracer.trace(`New instance of BleTransport for device ${this.id}`)}async cancelPendingOperations(){await j.disconnectDevice(this.id,this.onDisconnect)}clearCurrentTransactionIds(){this.currentTransactionIds=[]}async inferMTU(){let e=await n.Fk.getMtu(this.device.deviceId);return this.tracer.trace("Inferring MTU ...",{currentDeviceMtu:e}),await this.exchangeAtomicImpl((async()=>{try{e=await(0,l._)((0,w.h)(this.notifyObservable.pipe((0,C.T)((e=>{if(e instanceof Error)throw e;return e})),(0,D.$)((e=>8===e.readUInt8(0))),(0,C.T)((e=>e.readUInt8(5)))),(0,f.v)((()=>(0,p.H)(this.write(P.from([8,0,0,0,0]))))).pipe((0,x.w)())))}catch(t){this.tracer.withType("ble-error").trace("Error while inferring MTU",{mtu:e}),await j.disconnectDevice(this.id,this.onDisconnect);const i=S(t);throw this.tracer.trace("Error while inferring APDU, mapped and throws following error",{mappedError:i}),i}finally{this.clearCurrentTransactionIds()}})),this.tracer.trace("Successfully negotiated MTU with device",{mtu:e,mtuSize:this.mtuSize}),e>20&&(this.mtuSize=e),this.mtuSize}async requestConnectionPriority(e){let t;switch(e){case"High":case"Balanced":t=n.rj.CONNECTION_PRIORITY_BALANCED;break;case"LowPower":t=n.rj.CONNECTION_PRIORITY_LOW_POWER}var i;await(i=n.Fk.requestConnectionPriority(this.device.deviceId,t),i.catch(F))}async close(){const e=this.tracer.withUpdatedContext({function:"close"});let t;e.trace("Closing, queuing a disconnect with a timeout ...");const i=new Promise((e=>{t=e}));N(this.id),this.disconnectTimeout=setTimeout((()=>{e.trace("Disconnect timeout has been reached ..."),this.isConnected?j.disconnectDevice(this.id,this.onDisconnect,e.getContext()).catch((()=>{})).finally(t):t()}),j.disconnectTimeoutMs),await Promise.race([this.exchangeBusyPromise||Promise.resolve(),i])}}async function q(e,t,i,r){let{rxjsScheduler:c}=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const a=new h.LocalTracer(U,r);let s,u,l;if(a.trace(`Opening ${e}`,{needsReconnect:t}),"string"==typeof e){if(u=e,A[e])return a.trace("Transport in cache, using it"),N(e),A[e].setTraceContext(r),A[e];a.trace(`Trying to open device: ${e}`),await async function(){if(await n.gq.initialize(),!await n.gq.isEnabled())throw new d.BluetoothRequired("",{state:"disable"})}();const t=await n.Fk.getDevices([e]);if(a.trace(`Found ${t.length} already known device(s) with given id`,{deviceOrId:e}),[s]=t,!s){const t=(await n.Fk.getServices(e)).map((e=>e.uuid)),i=(await n.Fk.getConnectedDevices(t)).filter((t=>t.deviceId===e));a.trace(`No known device with given id.\n        Found ${i.length} devices from already connected devices`,{deviceOrId:e}),[s]=i}if(!s){a.trace("No known nor connected devices with given id. Trying to connect to device",{deviceOrId:e,timeoutMs:i});try{await n.Fk.connect(e,(()=>{var e,t;null===(e=(t=l).onDisconnect)||void 0===e||e.call(t)}),{timeout:i})}catch(e){throw a.trace(`Error code: ${e.errorCode}`),e}}if(!s)throw new d.CantOpenDevice}else s=e,u=e.deviceId;if(!(await n.Fk.getConnectedDevices((0,o.gq)())).find((e=>e.deviceId===u))){a.trace("Device found but not connected. connecting...",{timeoutMs:i,connectOptions:B});try{await n.Fk.connect(u,(()=>{var e,t;null===(e=(t=l).onDisconnect)||void 0===e||e.call(t)}),{timeout:i})}catch(e){throw a.trace("Connect error",{error:e}),S(e)}}a.trace("Device is connected now, getting services and characteristics");let w=[];await n.Fk.discoverServices(u),w=await n.Fk.getServices(u);let v=function(e){if(!e||!e.uuids)return;const[t]=e.uuids;if(!t)return;const i=(0,o.R6)(t);return i?(L[e.deviceId]=i,i):void 0}(s);const f=[];if(!v)for(const e of(0,o.gq)())try{const t=w.find((t=>t.uuid===e));if(v=(0,o.R6)(e),v&&t){f.push(...t.characteristics),R=v.serviceUuid;break}}catch(e){}if(!v)throw a.trace("Service not found"),new d.TransportError("service not found","BLEServiceNotFound");const{deviceModel:p,writeUuid:b,writeCmdUuid:C,notifyUuid:D}=v;if(!f)throw a.trace("Characteristics not found"),new d.TransportError("service not found","BLEServiceNotFound");let x,F,P;for(const e of f)e.uuid===b?x=e:e.uuid===C?F=e:e.uuid===D&&(P=e);if(!x)throw new d.TransportError("write characteristic not found","BLECharacteristicNotFound");if(!P)throw new d.TransportError("notify characteristic not found","BLECharacteristicNotFound");if(!x.properties.write)throw new d.TransportError("The writable-with-response characteristic is not writable with response","BLECharacteristicInvalid");if(!P.properties.notify)throw new d.TransportError("notify characteristic not notifiable","BLECharacteristicInvalid");if(F&&!F.properties.writeWithoutResponse)throw new d.TransportError("The writable-without-response characteristic is not writable without response","BLECharacteristicInvalid");const M=await n.Fk.getMtu(s.deviceId);a.trace(`device.mtu=${M}`);const $=((e,t,i,r)=>new I.c((c=>(new h.LocalTracer("ble-verbose",r).trace("Start monitoring BLE characteristics",{characteristicUuid:i.uuid}),n.Fk.startNotifications(e,t,i.uuid,(e=>{const t=new Uint8Array(e.buffer),i=k.from(t);c.next(i)})),()=>{n.Fk.stopEnabledNotifications()}))))(u,R,P,r).pipe((0,T.W)((e=>{const t=String(e);return t.includes("notify change failed")?(0,g.of)(new d.PairingFailed(t)):(0,m.$)((()=>e))})),(0,y.M)((e=>{e instanceof d.PairingFailed||(0,h.trace)({type:"ble-frame",message:`<= ${e.toString("hex")}`,context:r})})),(0,E.u)()),W=$.subscribe();l=new j(s,x,F,$,p,{context:r,rxjsScheduler:c}),a.trace("New BleTransport created"),l.onDisconnect=e=>{var t,i;l.isConnected=!1,l.notYetDisconnected=!1,W.unsubscribe(),N(l.id),delete A[l.id],a.trace(`On device disconnected callback: cleared cached transport for ${l.id},\n      emitting Transport event "disconnect. Error: ${e}"`,{reason:e}),l.emit("disconnect",e),null===(t=(i=l).disconnectCallback)||void 0===t||t.call(i)},A[l.id]=l;const z=Date.now();try{await l.inferMTU()}finally{const e=Date.now();O?(e-z<O.pairingThreshold?t=!1:p.id===o.Dp.stax&&(a.trace('Skipping "needsReconnect" strategy for Stax'),t=!1),t&&(a.trace("Device needs reconnection. Triggering a disconnect"),await j.disconnectDevice(l.id,l.onDisconnect),await(_=O.delayAfterFirstPairing,new Promise((e=>setTimeout(e,_)))))):t=!1}var _;return t?(a.trace("Reconnecting"),q(s,!1,i,r)):l}M(j,"disconnectTimeoutMs",5e3),M(j,"list",(()=>{throw new Error("not implemented")})),M(j,"disconnectDevice",(async(e,t,i)=>{const r=new h.LocalTracer(U,i);r.trace(`Trying to disconnect device ${e}`);try{await n.Fk.disconnect(e),null==t||t()}catch(e){r.withType("ble-error").trace("Error while trying to cancel device connection",{error:e})}r.trace(`Device ${e} disconnected`)}));let W,z,_=[];function Y(){return!!$}function H(e){return!!_.find((t=>t.identifier===e.identifier))&&!W}async function Q(e){try{if(!H(e))return;const t=await j.open(e.device);if(!H(e))return;const i={device:e.device,bleTransport:t};W=i,t.disconnectCallback=()=>{W=void 0,Y()&&(G(),V())},setTimeout((()=>{var e,t;(null===(e=W)||void 0===e?void 0:e.device.deviceId)===i.device.deviceId?(null===(t=z)||void 0===t||t(i),G()):Y()&&(W=void 0,G(),V())}),1e3)}catch(t){setTimeout((()=>{Q(e)}),1e4)}}function V(){$=j.listen({next:e=>{if("add"===e.type&&e.device){if(!e.device.name)return;if(_.find((t=>{var i;return t.device.deviceId===(null===(i=e.device)||void 0===i?void 0:i.deviceId)})))return;const t={identifier:(0,r.A)(),device:e.device};_.push(t),Q(t)}},error:()=>{G()},complete:()=>{G()}})}function G(){var e;_=[],null===(e=$)||void 0===e||e.unsubscribe(),$=void 0}const J={isSupported:async function(){if(!c.UMQ)return!1;try{await n.Fk.initialize({androidNeverForLocation:!0}),await n.Fk.requestEnable()}catch(e){}return n.Fk.isEnabled()},connect:function(){return new Promise((e=>{z=e,W?z(W):Y()||V()}))},stop:G}}}]);
//# sourceMappingURL=642.4019c935ee6610070ce7.js.map